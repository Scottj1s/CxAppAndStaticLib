//
// MainPage.xaml.cpp
// Implementation of the MainPage class.
//

#include "pch.h"
#include <string_view>
#include "MainPage.xaml.h"

using namespace CxApp;

using namespace std::literals;

using namespace Platform;
using namespace Windows::Foundation;
using namespace Windows::Foundation::Collections;
using namespace Windows::UI::Xaml;
using namespace Windows::UI::Xaml::Controls;
using namespace Windows::UI::Xaml::Controls::Primitives;
using namespace Windows::UI::Xaml::Data;
using namespace Windows::UI::Xaml::Input;
using namespace Windows::UI::Xaml::Media;
using namespace Windows::UI::Xaml::Navigation;

// The Blank Page item template is documented at https://go.microsoft.com/fwlink/?LinkId=402352&clcid=0x409

using namespace winrt;

// Generated by cppwinrt -opt in class.g.cpp
void* winrt_make_StaticLibrary1_Class();

// Replace CRT activation TU 
HRESULT __stdcall GetActivationFactoryByPCWSTR(void* str, ::Platform::Guid& riid, void** ppActivationFactory);
void __stdcall FlushFactoryCache();

namespace __winRT
{
    long __stdcall __getActivationFactoryByPCWSTR(void* str, ::Platform::Guid& pGuid, void** ppActivationFactory)
    {
        if ((wchar_t*)str == L"StaticLibrary1.Class"sv)
        {
            // Note: cppwinrt-generated factory returns default inteface, IActivationFactory,
            // so need to QI to the requested factory.
            auto factory = (IUnknown*)winrt_make_StaticLibrary1_Class();
            auto hr = factory->QueryInterface(pGuid, ppActivationFactory);
            factory->Release();
            return hr;
        }
        return GetActivationFactoryByPCWSTR(str, pGuid, ppActivationFactory);
    }
}

namespace Platform
{
    void __stdcall Module::FlushFactoryCache()
    {
        ::FlushFactoryCache();
    }
}

ref class Derived : public ::StaticLibrary1::Class
{};

MainPage::MainPage()
{
	InitializeComponent();
	auto d = ref new Derived();
    auto p = d->MyProperty;
}
